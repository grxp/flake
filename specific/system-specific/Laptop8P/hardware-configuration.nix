# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usbhid" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [
    "nowatchdog"
    "zswap.enabled=1"
    "zswap.shrinker_enabled=1"
  ];

  # Use systemd-cryptenroll to auto unlock luks partition
  boot.initrd.systemd.enable = true;

  security.tpm2.enable = true;
  security.tpm2.pkcs11.enable = true;
  security.tpm2.pkcs11.package =
    pkgs.tpm2-pkcs11.override { abrmdSupport = false; }; # Using Kernel RM
  security.tpm2.tctiEnvironment.enable = true;

  environment.systemPackages = with pkgs; [
    (tpm2-tools.override { abrmdSupport = false; })
    tpm2-tss
  ];

  boot.initrd.luks.devices."lvm-encrypted".device = "/dev/mapper/lvm-lvol0";

  fileSystems."/" = {
    device = "tmpfs";
    fsType = "tmpfs";
    options = [ "mode=755" ];
  };

  # fileSystems."/root" = {
  #   device = "/dev/mapper/lvm-encrypted";
  #   fsType = "btrfs";
  #   options = [ "subvol=root" "compress=zstd" ];
  # };

  fileSystems."/home" = {
    device = "/dev/mapper/lvm-encrypted";
    fsType = "btrfs";
    options = [ "subvol=nix-home" "compress=zstd" ];
  };

  fileSystems."/nix" = {
    device = "/dev/mapper/lvm-encrypted";
    fsType = "btrfs";
    options = [ "subvol=nix" "compress=zstd" "noatime" ];
  };

  fileSystems."/persistent" = {
    device = "/dev/mapper/lvm-encrypted";
    fsType = "btrfs";
    options = [ "subvol=persistent" "compress=zstd" ];
    neededForBoot = true;
  };

  # fileSystems."/swap" = {
  #   device = "/dev/mapper/lvm-encrypted";
  #   fsType = "btrfs";
  #   options = [ "subvol=swap" "noatime" ];
  # };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/D63D-7CB2";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" ];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-partuuid/ff8fbf43-96b8-4e80-8db7-d1f202a5b464";
      randomEncryption = {
        enable = true;
        allowDiscards = true;
      };
      discardPolicy = "both";
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
